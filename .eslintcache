[{"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\index.js":"1","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\index.js":"2","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\index.js":"3","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\styles.js":"4","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\styles.js":"5","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\index.js":"6","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\styles.js":"7","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\index.js":"8","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\styles.js":"9","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\index.js":"10","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\styles.js":"11","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\services\\api.js":"12","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\utils\\typeicons.js":"13","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\index.js":"14","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\styles.js":"15"},{"size":261,"mtime":1612536370865,"results":"16","hashOfConfig":"17"},{"size":2249,"mtime":1612497574063,"results":"18","hashOfConfig":"17"},{"size":787,"mtime":1612497084239,"results":"19","hashOfConfig":"17"},{"size":985,"mtime":1612536559506,"results":"20","hashOfConfig":"17"},{"size":1182,"mtime":1612497364850,"results":"21","hashOfConfig":"17"},{"size":225,"mtime":1612453941280,"results":"22","hashOfConfig":"17"},{"size":382,"mtime":1612468878413,"results":"23","hashOfConfig":"17"},{"size":332,"mtime":1612480807186,"results":"24","hashOfConfig":"17"},{"size":653,"mtime":1612493040738,"results":"25","hashOfConfig":"17"},{"size":635,"mtime":1612494183505,"results":"26","hashOfConfig":"17"},{"size":811,"mtime":1612531028079,"results":"27","hashOfConfig":"17"},{"size":122,"mtime":1612489056307,"results":"28","hashOfConfig":"17"},{"size":649,"mtime":1612494537511,"results":"29","hashOfConfig":"17"},{"size":2265,"mtime":1612543668478,"results":"30","hashOfConfig":"17"},{"size":2470,"mtime":1612545324597,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1acrzod",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\index.js",["66"],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\index.js",["67"],"import React, {useState, useEffect} from 'react';\r\nimport Header from '../../Components/Header';\r\nimport FilterCard from '../../Components/FilterCard';\r\nimport TaskCard from '../../Components/TaskCard';\r\nimport Footer from '../../Components/Footer';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [lateCount, setLateCount] = useState();\r\n\r\n\r\n async function loadTasks(){\r\n   await api.get(`/task/filter/${filterActived}/11-11-11-11-11-12`)\r\n   .then(response => {\r\n      setTasks(response.data)\r\n   })\r\n }\r\n\r\n async function lateVerify(){\r\n  await api.get(`/task/filter/late/11-11-11-11-11-12`)\r\n  .then(response => {\r\n     setLateCount(response.data.length)\r\n  })\r\n}\r\n\r\nfunction Notification(){\r\n  setFilterActived('late');\r\n}\r\n\r\n\r\n \r\n useEffect(()=>{\r\n   loadTasks();\r\n   lateVerify();\r\n }, [filterActived])\r\n\r\n  return (\r\n   \r\n  <S.Container>\r\n   <S.GlobalStyle/>\r\n   <Header lateCount={lateCount} clickNotification={Notification} />\r\n\r\n   <S.FilterArea>\r\n   <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n   <FilterCard title=\"All\" actived={filterActived === 'all'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n   <FilterCard title=\"Today\" actived={filterActived === 'today'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n   <FilterCard title=\"Week\" actived={filterActived === 'week'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"month\")}> \r\n   <FilterCard title=\"Month\" actived={filterActived === 'month'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n   <FilterCard title=\"Year\" actived={filterActived === 'year'} />\r\n   </button>\r\n\r\n   </S.FilterArea>\r\n\r\n   <S.Title>\r\n     <h3>{filterActived === 'late' ? 'Tasks Late' : 'Tasks'}</h3>\r\n   </S.Title>\r\n    \r\n    <S.Content>\r\n   {\r\n     tasks.map(t => (\r\n     <TaskCard type={t.type} title={t.title} when={t.when}/>\r\n     ))\r\n    \r\n   }\r\n    \r\n    </S.Content>\r\n\r\n   <Footer/>\r\n \r\n  </S.Container>\r\n  \r\n  \r\n  \r\n  )\r\n}\r\n\r\nexport default Home;\r\n",["68","69"],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\index.js",["70","71","72"],"import React from 'react';\r\nimport logo from '../../assets/logo.png'\r\nimport bell from '../../assets/bell.png'\r\nimport * as S from './styles'\r\n\r\nfunction Header({lateCount, clickNotification}) {\r\n  return (\r\n    <S.Container>\r\n      <S.LeftSide>\r\n      <img src={logo} alt=\"Logo\"/>\r\n      </S.LeftSide>\r\n\r\n      <S.RightSide>\r\n      <a href=\"#\">HOME</a>\r\n      <span className=\"divider\"></span>\r\n      <a href=\"#\">NEW TASK</a>\r\n      <span className=\"divider\"></span>\r\n      <a href=\"#\">SYNCHRONIZE MOBILE</a>\r\n      <span className=\"divider\"></span>\r\n      <button onClick={clickNotification} id=\"notification\">\r\n      <img src={bell} alt=\"Notification\"/>\r\n      <span>{lateCount}</span>\r\n\r\n      </button>\r\n      </S.RightSide>\r\n    </S.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\index.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\index.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\index.js",["73","74"],"import React , {useMemo} from 'react';\r\n\r\nimport * as S from './styles';\r\nimport typeIcons from '../../utils/typeicons';\r\n\r\nimport { format } from 'date-fns';\r\n\r\nfunction TaskCard({type, title, when}) {\r\nconst date = useMemo(() => format(new Date(when), 'dd/MM/yyyy') );\r\nconst hour = useMemo(() => format(new Date(when), 'HH:mm') );\r\n\r\n  return (\r\n    <S.Container>\r\n\r\n   <S.TopCard>\r\n   <img src={typeIcons[type]} alt=\"Task icon\"/>\r\n   <h3>{title}</h3>\r\n   </S.TopCard>\r\n   <S.BottomCard>\r\n       <strong>{date}</strong>\r\n       <span>{hour}</span>\r\n   </S.BottomCard>\r\n   \r\n    </S.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\services\\api.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\utils\\typeicons.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\index.js",["75"],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\styles.js",[],{"ruleId":"76","severity":1,"message":"77","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":12},{"ruleId":"80","severity":1,"message":"81","line":39,"column":5,"nodeType":"82","endLine":39,"endColumn":20,"suggestions":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":14,"column":7,"nodeType":"90","endLine":14,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":16,"column":7,"nodeType":"90","endLine":16,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":18,"column":7,"nodeType":"90","endLine":18,"endColumn":19},{"ruleId":"80","severity":1,"message":"91","line":9,"column":14,"nodeType":"78","endLine":9,"endColumn":21},{"ruleId":"80","severity":1,"message":"91","line":10,"column":14,"nodeType":"78","endLine":10,"endColumn":21},{"ruleId":"92","severity":1,"message":"93","line":45,"column":41,"nodeType":"94","messageId":"95","endLine":45,"endColumn":43},"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["96"],"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"99","fix":"100"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [filterActived, loadTasks]",{"range":"101","text":"102"},[954,969],"[filterActived, loadTasks]"]