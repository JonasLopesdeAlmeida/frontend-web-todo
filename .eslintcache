[{"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\index.js":"1","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\index.js":"2","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\index.js":"3","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\styles.js":"4","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\styles.js":"5","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\index.js":"6","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\styles.js":"7","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\index.js":"8","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\styles.js":"9","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\index.js":"10","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\styles.js":"11","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\services\\api.js":"12","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\utils\\typeicons.js":"13","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\index.js":"14","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\styles.js":"15","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\routes\\index.js":"16"},{"size":208,"mtime":1613062348864,"results":"17","hashOfConfig":"18"},{"size":2249,"mtime":1612497574063,"results":"19","hashOfConfig":"18"},{"size":842,"mtime":1613062666729,"results":"20","hashOfConfig":"18"},{"size":985,"mtime":1612536559506,"results":"21","hashOfConfig":"18"},{"size":1182,"mtime":1612497364850,"results":"22","hashOfConfig":"18"},{"size":225,"mtime":1612453941280,"results":"23","hashOfConfig":"18"},{"size":382,"mtime":1612468878413,"results":"24","hashOfConfig":"18"},{"size":332,"mtime":1612480807186,"results":"25","hashOfConfig":"18"},{"size":653,"mtime":1612493040738,"results":"26","hashOfConfig":"18"},{"size":635,"mtime":1612494183505,"results":"27","hashOfConfig":"18"},{"size":811,"mtime":1612531028079,"results":"28","hashOfConfig":"18"},{"size":124,"mtime":1612549271049,"results":"29","hashOfConfig":"18"},{"size":649,"mtime":1612494537511,"results":"30","hashOfConfig":"18"},{"size":3540,"mtime":1612623769907,"results":"31","hashOfConfig":"18"},{"size":2470,"mtime":1612550084919,"results":"32","hashOfConfig":"18"},{"size":426,"mtime":1613062445245,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1acrzod",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\index.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\index.js",["70"],"import React, {useState, useEffect} from 'react';\r\nimport Header from '../../Components/Header';\r\nimport FilterCard from '../../Components/FilterCard';\r\nimport TaskCard from '../../Components/TaskCard';\r\nimport Footer from '../../Components/Footer';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api';\r\n\r\nfunction Home() {\r\n  const [filterActived, setFilterActived] = useState('all');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [lateCount, setLateCount] = useState();\r\n\r\n\r\n async function loadTasks(){\r\n   await api.get(`/task/filter/${filterActived}/11-11-11-11-11-12`)\r\n   .then(response => {\r\n      setTasks(response.data)\r\n   })\r\n }\r\n\r\n async function lateVerify(){\r\n  await api.get(`/task/filter/late/11-11-11-11-11-12`)\r\n  .then(response => {\r\n     setLateCount(response.data.length)\r\n  })\r\n}\r\n\r\nfunction Notification(){\r\n  setFilterActived('late');\r\n}\r\n\r\n\r\n \r\n useEffect(()=>{\r\n   loadTasks();\r\n   lateVerify();\r\n }, [filterActived])\r\n\r\n  return (\r\n   \r\n  <S.Container>\r\n   <S.GlobalStyle/>\r\n   <Header lateCount={lateCount} clickNotification={Notification} />\r\n\r\n   <S.FilterArea>\r\n   <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\r\n   <FilterCard title=\"All\" actived={filterActived === 'all'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\r\n   <FilterCard title=\"Today\" actived={filterActived === 'today'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\r\n   <FilterCard title=\"Week\" actived={filterActived === 'week'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"month\")}> \r\n   <FilterCard title=\"Month\" actived={filterActived === 'month'} />\r\n   </button>\r\n   \r\n   <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\r\n   <FilterCard title=\"Year\" actived={filterActived === 'year'} />\r\n   </button>\r\n\r\n   </S.FilterArea>\r\n\r\n   <S.Title>\r\n     <h3>{filterActived === 'late' ? 'Tasks Late' : 'Tasks'}</h3>\r\n   </S.Title>\r\n    \r\n    <S.Content>\r\n   {\r\n     tasks.map(t => (\r\n     <TaskCard type={t.type} title={t.title} when={t.when}/>\r\n     ))\r\n    \r\n   }\r\n    \r\n    </S.Content>\r\n\r\n   <Footer/>\r\n \r\n  </S.Container>\r\n  \r\n  \r\n  \r\n  )\r\n}\r\n\r\nexport default Home;\r\n",["71","72"],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\index.js",["73"],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Home\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Header\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\index.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\Footer\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\index.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\FilterCard\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\index.js",["74","75"],"import React , {useMemo} from 'react';\r\n\r\nimport * as S from './styles';\r\nimport typeIcons from '../../utils/typeicons';\r\n\r\nimport { format } from 'date-fns';\r\n\r\nfunction TaskCard({type, title, when}) {\r\nconst date = useMemo(() => format(new Date(when), 'dd/MM/yyyy') );\r\nconst hour = useMemo(() => format(new Date(when), 'HH:mm') );\r\n\r\n  return (\r\n    <S.Container>\r\n\r\n   <S.TopCard>\r\n   <img src={typeIcons[type]} alt=\"Task icon\"/>\r\n   <h3>{title}</h3>\r\n   </S.TopCard>\r\n   <S.BottomCard>\r\n       <strong>{date}</strong>\r\n       <span>{hour}</span>\r\n   </S.BottomCard>\r\n   \r\n    </S.Container>\r\n  )\r\n\r\n}\r\n\r\nexport default TaskCard;\r\n","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\Components\\TaskCard\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\services\\api.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\utils\\typeicons.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\index.js",["76","77","78","79"],"import React, {useState, useEffect, useRef} from 'react';\r\nimport Header from '../../Components/Header';\r\nimport Footer from '../../Components/Footer';\r\nimport * as S from './styles';\r\n\r\nimport api from '../../services/api';\r\nimport TypeIcons from '../../utils/typeicons';\r\n\r\nimport iconCalendar from '../../assets/calendar.png';\r\nimport iconClock from '../../assets/clock.png';\r\n\r\nfunction Task() {\r\n \r\n    const [lateCount, setLateCount] = useState();\r\n    const [type, setType] = useState();\r\n    const [id, setId] = useState();\r\n    const [done, setDone] = useState(false);\r\n    const [title, setTitle] = useState();\r\n    const [description, setDescription] = useState();\r\n    const [date, setDate] = useState();\r\n    const [hour, setHour] = useState();\r\n    const [macaddress, setMacaddress] = useState('11-11-11-11-11-12');\r\n\r\n\r\n\r\n\r\n\r\n async function lateVerify(){\r\n  await api.get(`/task/filter/late/11-11-11-11-11-12`)\r\n  .then(response => {\r\n     setLateCount(response.data.length)\r\n  })\r\n  \r\n}\r\n\r\nasync function Save(){\r\nawait api.post('/task', {\r\n\r\n    macaddress,\r\n    type,\r\n    title,\r\n    description,\r\n    when: `${date}T${hour}:00.000`\r\n\r\n}).then(()=>\r\n    alert('Task has been saved successfully')\r\n)\r\n.catch(()=>\r\n    alert('something went wrong')\r\n)\r\n\r\n}\r\n\r\n\r\nconst myForm = useRef(null)\r\n\r\n const submit = () => {\r\n\r\n   myForm.current.reset(); // will reset the entire form :)\r\n\r\n   }\r\n\r\n useEffect(()=>{\r\n   lateVerify();\r\n }, [])\r\n\r\n  return (\r\n   \r\n  <S.Container>\r\n   <S.GlobalStyle/>\r\n   <Header lateCount={lateCount}  />\r\n\r\n   <S.Form ref={myForm} onSubmit={submit}>\r\n       <S.TypeIcons>\r\n      {\r\n          TypeIcons.map((icon, index) => (\r\n             index > 0 && \r\n             <button type=\"button\" onClick={() => setType(index)}>\r\n                <img src={icon} alt=\"Type icons\"\r\n                className={type && type != index && 'inative'}\r\n             /> \r\n             </button>\r\n          ))\r\n      }\r\n       </S.TypeIcons>\r\n\r\n      <S.Input>\r\n          <span>Title</span>\r\n          <input \r\n           type=\"text\"\r\n           placeholder=\"type a task title...\"\r\n           onChange={e => setTitle(e.target.value)} value={title}/>\r\n      </S.Input>\r\n\r\n      \r\n      <S.TextArea>\r\n          <span>Description</span>\r\n          <textarea rows={5}\r\n          type=\"text\" \r\n          placeholder=\"task details...\"\r\n          onChange={e => setDescription(e.target.value)} value={description}\r\n          \r\n          />\r\n      </S.TextArea>\r\n\r\n\r\n      <S.Input>\r\n          <span>Date</span>\r\n          <input \r\n          type=\"date\" \r\n          placeholder=\"type a date...\"\r\n          onChange={e => setDate(e.target.value)} value={date}\r\n          />\r\n          <img src={iconCalendar} alt=\"calendar\"/>\r\n      </S.Input>\r\n\r\n     \r\n      <S.Input>\r\n          <span>Hour</span>\r\n          <input \r\n          type=\"time\"\r\n          placeholder=\"type a hour...\"\r\n          onChange={e => setHour(e.target.value)} value={hour}\r\n          />\r\n          <img src={iconClock} alt=\"clock\"/>\r\n      </S.Input>\r\n\r\n      <S.Options>\r\n          <div>\r\n              <input \r\n              type=\"checkbox\" \r\n              checked={done} \r\n              onChange={() => setDone(!done)}/>\r\n              <span>COMPLETED</span>\r\n          </div>\r\n          <button type=\"button\">DELETE</button>\r\n\r\n      </S.Options>\r\n\r\n\r\n      <S.Save>\r\n\r\n      <button type=\"button\" onClick={Save}>SAVE</button>\r\n\r\n      </S.Save>\r\n\r\n    </S.Form>   \r\n\r\n   <Footer/>\r\n \r\n  </S.Container>\r\n  \r\n  \r\n  \r\n  )\r\n}\r\n\r\nexport default Task;\r\n","C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\views\\Task\\styles.js",[],"C:\\Users\\jmdlo\\Documents\\frontend-web-todo\\frontend-web-todo\\src\\routes\\index.js",[],{"ruleId":"80","severity":1,"message":"81","line":39,"column":5,"nodeType":"82","endLine":39,"endColumn":20,"suggestions":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":19,"column":7,"nodeType":"90","endLine":19,"endColumn":19},{"ruleId":"80","severity":1,"message":"91","line":9,"column":14,"nodeType":"92","endLine":9,"endColumn":21},{"ruleId":"80","severity":1,"message":"91","line":10,"column":14,"nodeType":"92","endLine":10,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":16,"column":12,"nodeType":"92","messageId":"95","endLine":16,"endColumn":14},{"ruleId":"93","severity":1,"message":"96","line":16,"column":16,"nodeType":"92","messageId":"95","endLine":16,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":22,"column":24,"nodeType":"92","messageId":"95","endLine":22,"endColumn":37},{"ruleId":"98","severity":1,"message":"99","line":80,"column":41,"nodeType":"100","messageId":"101","endLine":80,"endColumn":43},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTasks'. Either include it or remove the dependency array.","ArrayExpression",["102"],"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","Identifier","no-unused-vars","'id' is assigned a value but never used.","unusedVar","'setId' is assigned a value but never used.","'setMacaddress' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"desc":"105","fix":"106"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [filterActived, loadTasks]",{"range":"107","text":"108"},[954,969],"[filterActived, loadTasks]"]